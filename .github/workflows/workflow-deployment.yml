name: Reusable docker container deployment for projects

on:
  workflow_call:
    inputs:
      container-name:
        required: true
        type: string
      tag:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.AILAB_GAR_JSON_KEY }}
      - name: Deploy to Cloud Run
        # You may pin to the exact commit or the version.
        # uses: google-github-actions/deploy-cloudrun@e62f655d5754bec48078a72edc015367b01ee97b
        uses: google-github-actions/deploy-cloudrun@v1.0.2
        with:
          # Name of the container image to deploy (e.g. gcr.io/cloudrun/hello:latest). Required if not using a service YAML.
          image: ${{ secrets.GCP_CLOUDRUN_REGION }}-docker.pkg.dev/${{ secrets.AILAB_REGISTRY }}/${{inputs.container-name}}:${{inputs.tag}}
          # ID of the service or fully qualified identifier for the service. Required if not using a service YAML.
          service: ${{inputs.container-name}}
          # Region in which the resource can be found.
          region: ${{ secrets.GCP_CLOUDRUN_REGION }}
          env_vars: ${{ secrets.ENV }}


  build-and-tag-on-merge:
    
            if: ${{ github.ref == 'refs/heads/master' }}
            environment : deployment
            needs: fetchProjects
            runs-on: ubuntu-latest
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            steps:
                      - name: Check Out Repo
                        uses: actions/checkout@v2
                
                      - id: release
                        uses: rymndhng/release-on-push-action@master
                        with:
                          bump_version_scheme: patch
                          tag_prefix: v
                          
                      - name: Set up Docker Buildx
                        id: buildx
                        uses: docker/setup-buildx-action@v2
                
                      - name: Login to Docker Hub
                        uses: docker/login-action@v2
                        with:
                          username: ${{ secrets.DOCKER_HUB_USERNAME }}
                          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
                
                      - name: Cache Docker layers
                        uses: actions/cache@v3
                        with:
                          path: /tmp/.buildx-cache
                          key: ${{ runner.os }}-buildx-${{ github.sha }}
                          restore-keys: ${{ runner.os }}-buildx
                
                      - name: Build and push
                        id: docker_build
                        uses: docker/build-push-action@v3
                        with:
                          context: .
                          file: ./Dockerfile.prod
                          push: true
                          tags: |
                            
                            ${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ steps.release.outputs.version }}
                          cache-from: type=local,src=/tmp/.buildx-cache
                          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
                
                      - name: Refresh Cache
                        run: |
                          rm -rf /tmp/.buildx-cache
                          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
                      
                      - name: Image digest
                        run: echo ${{ steps.docker_build.outputs.digest }}
                
  build-on-release:
            if: ${{ startsWith(github.ref, 'refs/tags/') }}
            environment : deployment
            needs: fetchProjects
            runs-on: ubuntu-latest
            steps:
                      - name: Check Out Repo
                        uses: actions/checkout@v2
                
                      - name: Set up Docker Buildx
                        id: buildx
                        uses: docker/setup-buildx-action@v2
                
                      - name: Login to Docker Hub
                        uses: docker/login-action@v2
                        with:
                          username: ${{ secrets.DOCKER_HUB_USERNAME }}
                          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
                
                      - name: Get Tag Version
                        id: tag
                        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
                
                      - name: Cache Docker layers
                        uses: actions/cache@v3
                        with:
                          path: /tmp/.buildx-cache
                          key: ${{ runner.os }}-buildx-${{ github.sha }}
                          restore-keys: ${{ runner.os }}-buildx
                
                      - name: Get Tag Version
                        id: tag2
                        run: |
                          VERSION=${GITHUB_REF#refs/tags/v}
                          echo "Version to be used: $VERSION"
                          echo "VERSION=$VERSION" >> $GITHUB_ENV
                
                      - name: Build and push
                        id: docker_build
                        uses: docker/build-push-action@v3
                        with:
                          context: .
                          file: ./Dockerfile.prod
                          push: true
                          tags: |
                            ${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.VERSION }}
                            ${{ secrets.DOCKER_HUB_REPOSITORY }}:tagname
                          cache-from: type=local,src=/tmp/.buildx-cache
                          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
                
                      - name: Refresh Cache
                        run: |
                          rm -rf /tmp/.buildx-cache
                          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
                
                      - name: Image digest
                        run: echo ${{ steps.docker_build.outputs.digest }}